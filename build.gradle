// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.kotlin_version = "1.5.31"
    ext.hilt_version = '2.35'
    ext.nav_version = '2.3.0-alpha02'
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:4.1.3"
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.6.10'
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:$nav_version"
        classpath "com.google.dagger:hilt-android-gradle-plugin:$hilt_version"
        classpath "com.google.android.libraries.mapsplatform.secrets-gradle-plugin:secrets-gradle-plugin:2.0.0"
        classpath 'com.google.gms:google-services:4.3.10'
        classpath 'com.google.gms:google-services:4.3.13'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}
allprojects {
    repositories {
        google()
        jcenter()
        maven {
            url 'https://jitpack.io'
        }
        flatDir {
            dirs 'src/main/libs'
        }
        maven { url "https://dl.bintray.com/enablex/maven" }
        def githubProperties = new Properties()
        githubProperties.load(new FileInputStream(rootProject.file("github.properties")))
        repositories {
            maven {
                name = "GitHubPackages"

                url = uri("https://maven.pkg.github.com/Cuberto/liquid-swipe-android")
                credentials {
                    /** Create github.properties in root project folder file with
                     ** gpr.usr=GITHUB_USER_ID & gpr.key=PERSONAL_ACCESS_TOKEN
                     ** Or set env variable GPR_USER & GPR_API_KEY if not adding a properties file**/
                    username = githubProperties['gpr.usr'] ?: System.getenv("GPR_USER")
                    password = githubProperties['gpr.key'] ?: System.getenv("GPR_API_KEY")
                }
            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}